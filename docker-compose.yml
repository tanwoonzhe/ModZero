version: "3.8"

services:
  db:
    image: postgres:15
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    ports:
      - "5433:5432"
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER} -d ${POSTGRES_DB}"]
      interval: 5s
      timeout: 5s
      retries: 10

  backend:
    build: ./backend
    environment:
      DATABASE_URL: ${DATABASE_URL}
      SECRET_KEY: ${SECRET_KEY}
      ACCESS_TOKEN_EXPIRE_MINUTES: ${ACCESS_TOKEN_EXPIRE_MINUTES}
      ENVIRONMENT: ${ENVIRONMENT}
      DEBUG: ${DEBUG}
      # Initial superuser credentials
      INITIAL_SUPERUSER_USERNAME: ${INITIAL_SUPERUSER_USERNAME}
      INITIAL_SUPERUSER_EMAIL: ${INITIAL_SUPERUSER_EMAIL}
      INITIAL_SUPERUSER_PASSWORD: ${INITIAL_SUPERUSER_PASSWORD}
      # Azure credentials (optional)
      AZURE_TENANT_ID: ${AZURE_TENANT_ID:-}
      AZURE_CLIENT_ID: ${AZURE_CLIENT_ID:-}
      AZURE_CLIENT_SECRET: ${AZURE_CLIENT_SECRET:-}
    depends_on:
      db:
        condition: service_healthy
    ports:
      - "8000:8000"
    volumes:
      - ./frontend/dist:/app/frontend/dist  # mount built frontend for serving static files

  frontend:
    build: ./frontend
    environment:
      VITE_API_BASE: ${VITE_API_BASE}
    depends_on:
      - backend
    ports:
      - "5173:80"

volumes:
  db_data: